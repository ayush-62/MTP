from z3 import *
import subprocess
import time

def Cexec(init_string):
    out = subprocess.check_output("./a.out %s" % init_string, shell=True,)
    return list(map(Bool, out.decode('utf-8').split()))

start_time = time.time()

input = BoolVector('inp', 15)
l1n1v1 = BoolVector('layer1node1v1', 10)
l1n2v1 = BoolVector('layer1node2v1', 10)
l1n3v1 = BoolVector('layer1node3v1', 10)
l1n4v1 = BoolVector('layer1node4v1', 10)
l1n5v1 = BoolVector('layer1node5v1', 10)
l1n6v1 = BoolVector('layer1node6v1', 10)
l1n7v1 = BoolVector('layer1node7v1', 10)
l1n8v1 = BoolVector('layer1node8v1', 10)
l1n9v1 = BoolVector('layer1node9v1', 10)
l1n10v1 = BoolVector('layer1node10v1', 10)
l2n1v1 = BoolVector('layer2node1v1', 10)
l2n2v1 = BoolVector('layer2node2v1', 10)
l2n3v1 = BoolVector('layer2node3v1', 10)
l2n4v1 = BoolVector('layer2node4v1', 10)
l2n5v1 = BoolVector('layer2node5v1', 10)
l2n6v1 = BoolVector('layer2node6v1', 10)
l2n7v1 = BoolVector('layer2node7v1', 10)
l2n8v1 = BoolVector('layer2node8v1', 10)
l2n9v1 = BoolVector('layer2node9v1', 10)
l2n10v1 = BoolVector('layer2node10v1', 10)
l3n1v1 = BoolVector('layer3node1v1', 10)
l3n2v1 = BoolVector('layer3node2v1', 10)
l3n3v1 = BoolVector('layer3node3v1', 10)
l3n4v1 = BoolVector('layer3node4v1', 10)
l3n5v1 = BoolVector('layer3node5v1', 10)
l3n6v1 = BoolVector('layer3node6v1', 10)
l3n7v1 = BoolVector('layer3node7v1', 10)
l3n8v1 = BoolVector('layer3node8v1', 10)
l3n9v1 = BoolVector('layer3node9v1', 10)
l3n10v1 = BoolVector('layer3node10v1', 10)
l4n1v1 = BoolVector('layer4node1v1', 1)
l4n2v1 = BoolVector('layer4node2v1', 1)
l4n3v1 = BoolVector('layer4node3v1', 1)
l4n4v1 = BoolVector('layer4node4v1', 1)
l4n5v1 = BoolVector('layer4node5v1', 1)
l4n6v1 = BoolVector('layer4node6v1', 1)
l4n7v1 = BoolVector('layer4node7v1', 1)
l4n8v1 = BoolVector('layer4node8v1', 1)
l4n9v1 = BoolVector('layer4node9v1', 1)
l4n10v1 = BoolVector('layer4node10v1', 1)
l1n1v2 = BoolVector('layer1node1v2', 10)
l1n2v2 = BoolVector('layer1node2v2', 10)
l1n3v2 = BoolVector('layer1node3v2', 10)
l1n4v2 = BoolVector('layer1node4v2', 10)
l1n5v2 = BoolVector('layer1node5v2', 10)
l1n6v2 = BoolVector('layer1node6v2', 10)
l1n7v2 = BoolVector('layer1node7v2', 10)
l1n8v2 = BoolVector('layer1node8v2', 10)
l1n9v2 = BoolVector('layer1node9v2', 10)
l1n10v2 = BoolVector('layer1node10v2', 10)
l2n1v2 = BoolVector('layer2node1v2', 10)
l2n2v2 = BoolVector('layer2node2v2', 10)
l2n3v2 = BoolVector('layer2node3v2', 10)
l2n4v2 = BoolVector('layer2node4v2', 10)
l2n5v2 = BoolVector('layer2node5v2', 10)
l2n6v2 = BoolVector('layer2node6v2', 10)
l2n7v2 = BoolVector('layer2node7v2', 10)
l2n8v2 = BoolVector('layer2node8v2', 10)
l2n9v2 = BoolVector('layer2node9v2', 10)
l2n10v2 = BoolVector('layer2node10v2', 10)
l3n1v2 = BoolVector('layer3node1v2', 10)
l3n2v2 = BoolVector('layer3node2v2', 10)
l3n3v2 = BoolVector('layer3node3v2', 10)
l3n4v2 = BoolVector('layer3node4v2', 10)
l3n5v2 = BoolVector('layer3node5v2', 10)
l3n6v2 = BoolVector('layer3node6v2', 10)
l3n7v2 = BoolVector('layer3node7v2', 10)
l3n8v2 = BoolVector('layer3node8v2', 10)
l3n9v2 = BoolVector('layer3node9v2', 10)
l3n10v2 = BoolVector('layer3node10v2', 10)
l4n1v2 = BoolVector('layer4node1v2', 1)
l4n2v2 = BoolVector('layer4node2v2', 1)
l4n3v2 = BoolVector('layer4node3v2', 1)
l4n4v2 = BoolVector('layer4node4v2', 1)
l4n5v2 = BoolVector('layer4node5v2', 1)
l4n6v2 = BoolVector('layer4node6v2', 1)
l4n7v2 = BoolVector('layer4node7v2', 1)
l4n8v2 = BoolVector('layer4node8v2', 1)
l4n9v2 = BoolVector('layer4node9v2', 1)
l4n10v2 = BoolVector('layer4node10v2', 1)
outv1 = BoolVector('outv1', 31)
outv2 = BoolVector('outv2', 31)

# def print_model(m):
#     w1 = "{" + "{" + str(m[l1n1v1[0]]) + ", " + str(m[l1n1v1[1]]) + ", " + str(m[l1n1v1[2]]) + ", " + str(m[l1n1v1[3]]) + ", " + str(m[l1n1v1[4]]) + ", " + str(m[l1n1v1[5]]) + ", " + str(m[l1n1v1[6]]) + ", " + str(m[l1n1v1[7]]) + ", " + str(m[l1n1v1[8]]) + ", " + str(m[l1n1v1[9]]) + "}, "
#     w1 += "{" + str(m[l1n2v1[0]]) + ", " + str(m[l1n2v1[1]]) + ", " + str(m[l1n2v1[2]]) + ", " + str(m[l1n2v1[3]]) + ", " + str(m[l1n2v1[4]]) + ", " + str(m[l1n2v1[5]]) + ", " + str(m[l1n2v1[6]]) + ", " + str(m[l1n2v1[7]]) + ", " + str(m[l1n2v1[8]]) + ", " + str(m[l1n2v1[9]]) + ", " + "}, "
#     w1 += "{" + str(m[l1n3v1[0]]) + ", " + str(m[l1n3v1[1]]) + ", " + str(m[l1n3v1[2]]) + ", " + str(m[l1n3v1[3]]) + ", " + str(m[l1n3v1[4]]) + ", " + str(m[l1n3v1[5]]) + ", " + str(m[l1n3v1[6]]) + ", " + str(m[l1n3v1[7]]) + ", " + str(m[l1n3v1[8]]) + ", " + str(m[l1n3v1[9]]) + "}, "
#     w1 += "{" + str(m[l1n4v1[0]]) + ", " + str(m[l1n4v1[1]]) + ", " + str(m[l1n4v1[2]]) + ", " + str(m[l1n4v1[3]]) + ", " + str(m[l1n4v1[4]]) + ", " + str(m[l1n4v1[5]]) + ", " + str(m[l1n4v1[6]]) + ", " + str(m[l1n4v1[7]]) + ", " + str(m[l1n4v1[8]]) + ", " + str(m[l1n4v1[9]]) + "}, "
#     w1 += "{" + str(m[l1n5v1[0]]) + ", " + str(m[l1n5v1[1]]) + ", " + str(m[l1n5v1[2]]) + ", " + str(m[l1n5v1[3]]) + ", " + str(m[l1n5v1[4]]) + ", " + str(m[l1n5v1[5]]) + ", " + str(m[l1n5v1[6]]) + ", " + str(m[l1n5v1[7]]) + ", " + str(m[l1n5v1[8]]) + ", " + str(m[l1n5v1[9]]) + "}, "
#     w1 += "{" + str(m[l1n6v1[0]]) + ", " + str(m[l1n6v1[1]]) + ", " + str(m[l1n6v1[2]]) + ", " + str(m[l1n6v1[3]]) + ", " + str(m[l1n6v1[4]]) + ", " + str(m[l1n6v1[5]]) + ", " + str(m[l1n6v1[6]]) + ", " + str(m[l1n6v1[7]]) + ", " + str(m[l1n6v1[8]]) + ", " + str(m[l1n6v1[9]]) + "}, "
#     w1 += "{" + str(m[l1n7v1[0]]) + ", " + str(m[l1n7v1[1]]) + ", " + str(m[l1n7v1[2]]) + ", " + str(m[l1n7v1[3]]) + ", " + str(m[l1n7v1[4]]) + ", " + str(m[l1n7v1[5]]) + ", " + str(m[l1n7v1[6]]) + ", " + str(m[l1n7v1[7]]) + ", " + str(m[l1n7v1[8]]) + ", " + str(m[l1n7v1[9]]) + "}, "
#     w1 += "{" + str(m[l1n8v1[0]]) + ", " + str(m[l1n8v1[1]]) + ", " + str(m[l1n8v1[2]]) + ", " + str(m[l1n8v1[3]]) + ", " + str(m[l1n8v1[4]]) + ", " + str(m[l1n8v1[5]]) + ", " + str(m[l1n8v1[6]]) + ", " + str(m[l1n8v1[7]]) + ", " + str(m[l1n8v1[8]]) + ", " + str(m[l1n8v1[9]]) + "}, "
#     w1 += "{" + str(m[l1n9v1[0]]) + ", " + str(m[l1n9v1[1]]) + ", " + str(m[l1n9v1[2]]) + ", " + str(m[l1n9v1[3]]) + ", " + str(m[l1n9v1[4]]) + ", " + str(m[l1n9v1[5]]) + ", " + str(m[l1n9v1[6]]) + ", " + str(m[l1n9v1[7]]) + ", " + str(m[l1n9v1[8]]) + ", " + str(m[l1n9v1[9]]) + "}, "
#     w1 += "{" + str(m[l1n10v1[0]]) + ", " + str(m[l1n10v1[1]]) + ", " + str(m[l1n10v1[2]]) + ", " + str(m[l1n10v1[3]]) + ", " + str(m[l1n10v1[4]]) + ", " + str(m[l1n10v1[5]]) + ", " + str(m[l1n10v1[6]]) + ", " + str(m[l1n10v1[7]]) + ", " + str(m[l1n10v1[8]]) + ", " + str(m[l1n10v1[9]]) + "}" + "}"
#     print(w1)

#     w1 = "{" + "{" + str(m[l2n1v1[0]]) + ", " + str(m[l2n1v1[1]]) + ", " + str(m[l2n1v1[2]]) + ", " + str(m[l2n1v1[3]]) + ", " + str(m[l2n1v1[4]]) + ", " + str(m[l2n1v1[5]]) + ", " + str(m[l2n1v1[6]]) + ", " + str(m[l2n1v1[7]]) + ", " + str(m[l2n1v1[8]]) + ", " + str(m[l2n1v1[9]]) + "}, "
#     w1 += "{" + str(m[l2n2v1[0]]) + ", " + str(m[l2n2v1[1]]) + ", " + str(m[l2n2v1[2]]) + ", " + str(m[l2n2v1[3]]) + ", " + str(m[l2n2v1[4]]) + ", " + str(m[l2n2v1[5]]) + ", " + str(m[l2n2v1[6]]) + ", " + str(m[l2n2v1[7]]) + ", " + str(m[l2n2v1[8]]) + ", " + str(m[l2n2v1[9]]) + ", " + "}, "
#     w1 += "{" + str(m[l2n3v1[0]]) + ", " + str(m[l2n3v1[1]]) + ", " + str(m[l2n3v1[2]]) + ", " + str(m[l2n3v1[3]]) + ", " + str(m[l2n3v1[4]]) + ", " + str(m[l2n3v1[5]]) + ", " + str(m[l2n3v1[6]]) + ", " + str(m[l2n3v1[7]]) + ", " + str(m[l2n3v1[8]]) + ", " + str(m[l2n3v1[9]]) + "}, "
#     w1 += "{" + str(m[l2n4v1[0]]) + ", " + str(m[l2n4v1[1]]) + ", " + str(m[l2n4v1[2]]) + ", " + str(m[l2n4v1[3]]) + ", " + str(m[l2n4v1[4]]) + ", " + str(m[l2n4v1[5]]) + ", " + str(m[l2n4v1[6]]) + ", " + str(m[l2n4v1[7]]) + ", " + str(m[l2n4v1[8]]) + ", " + str(m[l2n4v1[9]]) + "}, "
#     w1 += "{" + str(m[l2n5v1[0]]) + ", " + str(m[l2n5v1[1]]) + ", " + str(m[l2n5v1[2]]) + ", " + str(m[l2n5v1[3]]) + ", " + str(m[l2n5v1[4]]) + ", " + str(m[l2n5v1[5]]) + ", " + str(m[l2n5v1[6]]) + ", " + str(m[l2n5v1[7]]) + ", " + str(m[l2n5v1[8]]) + ", " + str(m[l2n5v1[9]]) + "}, "
#     w1 += "{" + str(m[l2n6v1[0]]) + ", " + str(m[l2n6v1[1]]) + ", " + str(m[l2n6v1[2]]) + ", " + str(m[l2n6v1[3]]) + ", " + str(m[l2n6v1[4]]) + ", " + str(m[l2n6v1[5]]) + ", " + str(m[l2n6v1[6]]) + ", " + str(m[l2n6v1[7]]) + ", " + str(m[l2n6v1[8]]) + ", " + str(m[l2n6v1[9]]) + "}, "
#     w1 += "{" + str(m[l2n7v1[0]]) + ", " + str(m[l2n7v1[1]]) + ", " + str(m[l2n7v1[2]]) + ", " + str(m[l2n7v1[3]]) + ", " + str(m[l2n7v1[4]]) + ", " + str(m[l2n7v1[5]]) + ", " + str(m[l2n7v1[6]]) + ", " + str(m[l2n7v1[7]]) + ", " + str(m[l2n7v1[8]]) + ", " + str(m[l2n7v1[9]]) + "}, "
#     w1 += "{" + str(m[l2n8v1[0]]) + ", " + str(m[l2n8v1[1]]) + ", " + str(m[l2n8v1[2]]) + ", " + str(m[l2n8v1[3]]) + ", " + str(m[l2n8v1[4]]) + ", " + str(m[l2n8v1[5]]) + ", " + str(m[l2n8v1[6]]) + ", " + str(m[l2n8v1[7]]) + ", " + str(m[l2n8v1[8]]) + ", " + str(m[l2n8v1[9]]) + "}, "
#     w1 += "{" + str(m[l2n9v1[0]]) + ", " + str(m[l2n9v1[1]]) + ", " + str(m[l2n9v1[2]]) + ", " + str(m[l2n9v1[3]]) + ", " + str(m[l2n9v1[4]]) + ", " + str(m[l2n9v1[5]]) + ", " + str(m[l2n9v1[6]]) + ", " + str(m[l2n9v1[7]]) + ", " + str(m[l2n9v1[8]]) + ", " + str(m[l2n9v1[9]]) + "}, "
#     w1 += "{" + str(m[l2n10v1[0]]) + ", " + str(m[l2n10v1[1]]) + ", " + str(m[l2n10v1[2]]) + ", " + str(m[l2n10v1[3]]) + ", " + str(m[l2n10v1[4]]) + ", " + str(m[l2n10v1[5]]) + ", " + str(m[l2n10v1[6]]) + ", " + str(m[l2n10v1[7]]) + ", " + str(m[l2n10v1[8]]) + ", " + str(m[l2n10v1[9]]) + "}" + "}"
#     print(w1)

#     w1 = "{" + str(m[l4n1v1[0]]) + ", " + str(m[l4n2v1[0]]) + ", " + str(m[l4n3v1[0]]) + ", " + str(m[l4n4v1[0]]) + ", " + str(m[l4n5v1[0]]) + ", " + str(m[l4n6v1[0]]) + ", " + str(m[l4n7v1[0]]) + ", " + str(m[l4n8v1[0]]) + ", " + str(m[l4n9v1[0]]) + ", " + str(m[l4n10v1[0]]) + "}"
#     print(w1)

def NN(input, l1n1, l1n2, l1n3, l1n4, l1n5, l1n6, l1n7, l1n8, l1n9, l1n10, l2n1, l2n2, l2n3, l2n4, l2n5, l2n6, l2n7, l2n8, l2n9, l2n10, l3n1, l3n2, l3n3, l3n4, l3n5, l3n6, l3n7, l3n8, l3n9, l3n10, l4n1, l4n2, l4n3, l4n4, l4n5, l4n6, l4n7, l4n8, l4n9, l4n10):
    l2out = BoolVector('l2out', 10)
    l2out[0] = Or(And(input[0], l1n1[0]), And(input[1], l1n2[0]), And(input[2], l1n3[0]), And(input[3], l1n4[0]), And(input[4], l1n5[0]), And(input[5], l1n6[0]), And(input[6], l1n7[0]), And(input[7], l1n8[0]), And(input[8], l1n9[0]), And(input[9], l1n10[0]), And(input[10], l1n11[0]), And(input[1], l1n2[0]), And(input[2], l1n3[0]), And(input[3], l1n4[0]), And(input[4], l1n5[0]))
    l2out[1] = Or(And(input[0], l1n1[1]), And(input[1], l1n2[1]), And(input[2], l1n3[1]), And(input[3], l1n4[1]), And(input[4], l1n5[1]), And(input[5], l1n6[1]), And(input[6], l1n7[1]), And(input[7], l1n8[1]), And(input[8], l1n9[1]), And(input[9], l1n10[1]))
    l2out[2] = Or(And(input[0], l1n1[2]), And(input[1], l1n2[2]), And(input[2], l1n3[2]), And(input[3], l1n4[2]), And(input[4], l1n5[2]), And(input[5], l1n6[2]), And(input[6], l1n7[2]), And(input[7], l1n8[2]), And(input[8], l1n9[2]), And(input[9], l1n10[2]))
    l2out[3] = Or(And(input[0], l1n1[3]), And(input[1], l1n2[3]), And(input[2], l1n3[3]), And(input[3], l1n4[3]), And(input[4], l1n5[3]), And(input[5], l1n6[3]), And(input[6], l1n7[3]), And(input[7], l1n8[3]), And(input[8], l1n9[3]), And(input[9], l1n10[3]))
    l2out[4] = Or(And(input[0], l1n1[4]), And(input[1], l1n2[4]), And(input[2], l1n3[4]), And(input[3], l1n4[4]), And(input[4], l1n5[4]), And(input[5], l1n6[4]), And(input[6], l1n7[4]), And(input[7], l1n8[4]), And(input[8], l1n9[4]), And(input[9], l1n10[4]))
    l2out[5] = Or(And(input[0], l1n1[5]), And(input[1], l1n2[5]), And(input[2], l1n3[5]), And(input[3], l1n4[5]), And(input[4], l1n5[5]), And(input[5], l1n6[5]), And(input[6], l1n7[5]), And(input[7], l1n8[5]), And(input[8], l1n9[5]), And(input[9], l1n10[5]))
    l2out[6] = Or(And(input[0], l1n1[6]), And(input[1], l1n2[6]), And(input[2], l1n3[6]), And(input[3], l1n4[6]), And(input[4], l1n5[6]), And(input[5], l1n6[6]), And(input[6], l1n7[6]), And(input[7], l1n8[6]), And(input[8], l1n9[6]), And(input[9], l1n10[6]))
    l2out[7] = Or(And(input[0], l1n1[7]), And(input[1], l1n2[7]), And(input[2], l1n3[7]), And(input[3], l1n4[7]), And(input[4], l1n5[7]), And(input[5], l1n6[7]), And(input[6], l1n7[7]), And(input[7], l1n8[7]), And(input[8], l1n9[7]), And(input[9], l1n10[7]))
    l2out[8] = Or(And(input[0], l1n1[8]), And(input[1], l1n2[8]), And(input[2], l1n3[8]), And(input[3], l1n4[8]), And(input[4], l1n5[8]), And(input[5], l1n6[8]), And(input[6], l1n7[8]), And(input[7], l1n8[8]), And(input[8], l1n9[8]), And(input[9], l1n10[8]))
    l2out[9] = Or(And(input[0], l1n1[9]), And(input[1], l1n2[9]), And(input[2], l1n3[9]), And(input[3], l1n4[9]), And(input[4], l1n5[9]), And(input[5], l1n6[9]), And(input[6], l1n7[9]), And(input[7], l1n8[9]), And(input[8], l1n9[9]), And(input[9], l1n10[9]))

    l3out = BoolVector('l3out', 10)
    l3out[0] = Or(And(l2out[0], l2n1[0]), And(l2out[1], l2n2[0]), And(l2out[2], l2n3[0]), And(l2out[3], l2n4[0]), And(l2out[4], l2n5[0]), And(l2out[5], l2n6[0]), And(l2out[6], l2n7[0]), And(l2out[7], l2n8[0]), And(l2out[8], l2n9[0]), And(l2out[9], l2n10[0]))
    l3out[1] = Or(And(l2out[0], l2n1[1]), And(l2out[1], l2n2[1]), And(l2out[2], l2n3[1]), And(l2out[3], l2n4[1]), And(l2out[4], l2n5[1]), And(l2out[5], l2n6[1]), And(l2out[6], l2n7[1]), And(l2out[7], l2n8[1]), And(l2out[8], l2n9[1]), And(l2out[9], l2n10[1]))
    l3out[2] = Or(And(l2out[0], l2n1[2]), And(l2out[1], l2n2[2]), And(l2out[2], l2n3[2]), And(l2out[3], l2n4[2]), And(l2out[4], l2n5[2]), And(l2out[5], l2n6[2]), And(l2out[6], l2n7[2]), And(l2out[7], l2n8[2]), And(l2out[8], l2n9[2]), And(l2out[9], l2n10[2]))
    l3out[3] = Or(And(l2out[0], l2n1[3]), And(l2out[1], l2n2[3]), And(l2out[2], l2n3[3]), And(l2out[3], l2n4[3]), And(l2out[4], l2n5[3]), And(l2out[5], l2n6[3]), And(l2out[6], l2n7[3]), And(l2out[7], l2n8[3]), And(l2out[8], l2n9[3]), And(l2out[9], l2n10[3]))
    l3out[4] = Or(And(l2out[0], l2n1[4]), And(l2out[1], l2n2[4]), And(l2out[2], l2n3[4]), And(l2out[3], l2n4[4]), And(l2out[4], l2n5[4]), And(l2out[5], l2n6[4]), And(l2out[6], l2n7[4]), And(l2out[7], l2n8[4]), And(l2out[8], l2n9[4]), And(l2out[9], l2n10[4]))
    l3out[5] = Or(And(l2out[0], l2n1[5]), And(l2out[1], l2n2[5]), And(l2out[2], l2n3[5]), And(l2out[3], l2n4[5]), And(l2out[4], l2n5[5]), And(l2out[5], l2n6[5]), And(l2out[6], l2n7[5]), And(l2out[7], l2n8[5]), And(l2out[8], l2n9[5]), And(l2out[9], l2n10[5]))
    l3out[6] = Or(And(l2out[0], l2n1[6]), And(l2out[1], l2n2[6]), And(l2out[2], l2n3[6]), And(l2out[3], l2n4[6]), And(l2out[4], l2n5[6]), And(l2out[5], l2n6[6]), And(l2out[6], l2n7[6]), And(l2out[7], l2n8[6]), And(l2out[8], l2n9[6]), And(l2out[9], l2n10[6]))
    l3out[7] = Or(And(l2out[0], l2n1[7]), And(l2out[1], l2n2[7]), And(l2out[2], l2n3[7]), And(l2out[3], l2n4[7]), And(l2out[4], l2n5[7]), And(l2out[5], l2n6[7]), And(l2out[6], l2n7[7]), And(l2out[7], l2n8[7]), And(l2out[8], l2n9[7]), And(l2out[9], l2n10[7]))
    l3out[8] = Or(And(l2out[0], l2n1[8]), And(l2out[1], l2n2[8]), And(l2out[2], l2n3[8]), And(l2out[3], l2n4[8]), And(l2out[4], l2n5[8]), And(l2out[5], l2n6[8]), And(l2out[6], l2n7[8]), And(l2out[7], l2n8[8]), And(l2out[8], l2n9[8]), And(l2out[9], l2n10[8]))
    l3out[9] = Or(And(l2out[0], l2n1[9]), And(l2out[1], l2n2[9]), And(l2out[2], l2n3[9]), And(l2out[3], l2n4[9]), And(l2out[4], l2n5[9]), And(l2out[5], l2n6[9]), And(l2out[6], l2n7[9]), And(l2out[7], l2n8[9]), And(l2out[8], l2n9[9]), And(l2out[9], l2n10[9]))

    l4out = BoolVector('l4out', 10)
    l4out[0] = Or(And(l3out[0], l3n1[0]), And(l3out[1], l3n2[0]), And(l3out[2], l3n3[0]), And(l3out[3], l3n4[0]), And(l3out[4], l3n5[0]), And(l3out[5], l3n6[0]), And(l3out[6], l3n7[0]), And(l3out[7], l3n8[0]), And(l3out[8], l3n9[0]), And(l3out[9], l3n10[0]))
    l4out[1] = Or(And(l3out[0], l3n1[1]), And(l3out[1], l3n2[1]), And(l3out[2], l3n3[1]), And(l3out[3], l3n4[1]), And(l3out[4], l3n5[1]), And(l3out[5], l3n6[1]), And(l3out[6], l3n7[1]), And(l3out[7], l3n8[1]), And(l3out[8], l3n9[1]), And(l3out[9], l3n10[1]))
    l4out[2] = Or(And(l3out[0], l3n1[2]), And(l3out[1], l3n2[2]), And(l3out[2], l3n3[2]), And(l3out[3], l3n4[2]), And(l3out[4], l3n5[2]), And(l3out[5], l3n6[2]), And(l3out[6], l3n7[2]), And(l3out[7], l3n8[2]), And(l3out[8], l3n9[2]), And(l3out[9], l3n10[2]))
    l4out[3] = Or(And(l3out[0], l3n1[3]), And(l3out[1], l3n2[3]), And(l3out[2], l3n3[3]), And(l3out[3], l3n4[3]), And(l3out[4], l3n5[3]), And(l3out[5], l3n6[3]), And(l3out[6], l3n7[3]), And(l3out[7], l3n8[3]), And(l3out[8], l3n9[3]), And(l3out[9], l3n10[3]))
    l4out[4] = Or(And(l3out[0], l3n1[4]), And(l3out[1], l3n2[4]), And(l3out[2], l3n3[4]), And(l3out[3], l3n4[4]), And(l3out[4], l3n5[4]), And(l3out[5], l3n6[4]), And(l3out[6], l3n7[4]), And(l3out[7], l3n8[4]), And(l3out[8], l3n9[4]), And(l3out[9], l3n10[4]))
    l4out[5] = Or(And(l3out[0], l3n1[5]), And(l3out[1], l3n2[5]), And(l3out[2], l3n3[5]), And(l3out[3], l3n4[5]), And(l3out[4], l3n5[5]), And(l3out[5], l3n6[5]), And(l3out[6], l3n7[5]), And(l3out[7], l3n8[5]), And(l3out[8], l3n9[5]), And(l3out[9], l3n10[5]))
    l4out[6] = Or(And(l3out[0], l3n1[6]), And(l3out[1], l3n2[6]), And(l3out[2], l3n3[6]), And(l3out[3], l3n4[6]), And(l3out[4], l3n5[6]), And(l3out[5], l3n6[6]), And(l3out[6], l3n7[6]), And(l3out[7], l3n8[6]), And(l3out[8], l3n9[6]), And(l3out[9], l3n10[6]))
    l4out[7] = Or(And(l3out[0], l3n1[7]), And(l3out[1], l3n2[7]), And(l3out[2], l3n3[7]), And(l3out[3], l3n4[7]), And(l3out[4], l3n5[7]), And(l3out[5], l3n6[7]), And(l3out[6], l3n7[7]), And(l3out[7], l3n8[7]), And(l3out[8], l3n9[7]), And(l3out[9], l3n10[7]))
    l4out[8] = Or(And(l3out[0], l3n1[8]), And(l3out[1], l3n2[8]), And(l3out[2], l3n3[8]), And(l3out[3], l3n4[8]), And(l3out[4], l3n5[8]), And(l3out[5], l3n6[8]), And(l3out[6], l3n7[8]), And(l3out[7], l3n8[8]), And(l3out[8], l3n9[8]), And(l3out[9], l3n10[8]))
    l4out[9] = Or(And(l3out[0], l3n1[9]), And(l3out[1], l3n2[9]), And(l3out[2], l3n3[9]), And(l3out[3], l3n4[9]), And(l3out[4], l3n5[9]), And(l3out[5], l3n6[9]), And(l3out[6], l3n7[9]), And(l3out[7], l3n8[9]), And(l3out[8], l3n9[9]), And(l3out[9], l3n10[9]))


    l5out = BoolVector('l5out', 1)
    l5out[0] = Or(And(l4out[0], l4n1[0]), And(l4out[1], l4n2[0]), And(l4out[2], l4n3[0]), And(l4out[3], l4n4[0]), And(l4out[4], l4n5[0]), And(l4out[5], l4n6[0]), And(l4out[6], l4n7[0]), And(l4out[7], l4n8[0]), And(l4out[8], l4n9[0]), And(l4out[9], l4n10[0]))

    out = BoolVector('out', 31)
    out[0] = l2out[0]
    out[1] = l2out[1]
    out[2] = l2out[2]
    out[3] = l2out[3]
    out[4] = l2out[4]
    out[5] = l2out[5]
    out[6] = l2out[6]
    out[7] = l2out[7]
    out[8] = l2out[8]
    out[9] = l2out[9]
    out[10] = l3out[0]
    out[11] = l3out[1]
    out[12] = l3out[2]
    out[13] = l3out[3]
    out[14] = l3out[4]
    out[15] = l3out[5]
    out[16] = l3out[6]
    out[17] = l3out[7]
    out[18] = l3out[8]
    out[19] = l3out[9]
    out[20] = l4out[0]
    out[21] = l4out[1]
    out[22] = l4out[2]
    out[23] = l4out[3]
    out[24] = l4out[4]
    out[25] = l4out[5]
    out[26] = l4out[6]
    out[27] = l4out[7]
    out[28] = l4out[8]
    out[29] = l4out[9]
    out[30] = l5out[0]
    return out

s = Tactic('smt').solver()

s.add(NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[0] == outv1[0], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[1] == outv1[1], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[2] == outv1[2], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[3] == outv1[3], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[4] == outv1[4], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[5] == outv1[5], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[6] == outv1[6], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[7] == outv1[7], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[8] == outv1[8], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[9] == outv1[9], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[10] == outv1[10], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[11] == outv1[11], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[12] == outv1[12], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[13] == outv1[13], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[14] == outv1[14], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[15] == outv1[15], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[16] == outv1[16], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[17] == outv1[17], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[18] == outv1[18], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[19] == outv1[19], NN(input, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[20] == outv1[20])
s.add(NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[0] == outv2[0], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[1] == outv2[1], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[2] == outv2[2], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[3] == outv2[3], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[4] == outv2[4], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[5] == outv2[5], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[6] == outv2[6], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[7] == outv2[7], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[8] == outv2[8], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[9] == outv2[9], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[10] == outv2[10], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[11] == outv2[11], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[12] == outv2[12], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[13] == outv2[13], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[14] == outv2[14], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[15] == outv2[15], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[16] == outv2[16], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[17] == outv2[17], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[18] == outv2[18], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[19] == outv2[19], NN(input, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[20] == outv2[20])

while s.check(outv1[0] != outv2[0], outv1[1] != outv2[1], outv1[2] != outv2[2], outv1[3] != outv2[3], outv1[4] != outv2[4], outv1[5] != outv2[5], outv1[6] != outv2[6], outv1[7] != outv2[7], outv1[8] != outv2[8], outv1[9] != outv2[9], outv1[10] != outv2[10], outv1[11] != outv2[11], outv1[12] != outv2[12], outv1[13] != outv2[13], outv1[14] != outv2[14], outv1[15] != outv2[15], outv1[16] != outv2[16], outv1[17] != outv2[17], outv1[18] != outv2[18], outv1[19] != outv2[19], outv1[20] != outv2[20], outv1[21] != outv2[21], outv1[22] != outv2[22], outv1[23] != outv2[23], outv1[24] != outv2[24], outv1[25] != outv2[25], outv1[26] != outv2[26], outv1[27] != outv2[27], outv1[28] != outv2[28], outv1[29] != outv2[29], outv1[30] != outv2[30]) == sat:
    m = s.model()
    ia = str(m[input[0]]) + " " + str(m[input[1]]) + " " + str(m[input[2]]) + " " + str(m[input[3]]) + " " + str(m[input[4]]) + " " + str(m[input[5]]) + " " + str(m[input[6]]) + " " + str(m[input[7]]) + " " + str(m[input[8]]) + " " + str(m[input[9]]) + " " + str(m[input[10]]) + " " + str(m[input[11]]) + " " + str(m[input[12]]) + " " + str(m[input[13]]) + " " + str(m[input[14]]) + " " + str(time.time() - start_time)
    print(ia)
    out = Cexec(ia)

    # ch = str(out[0]) + " " + str(out[1]) + " " + str(out[2])
    # print(ch)

    inp = BoolVector('inp', 10)
    inp[0] = m[input[0]]
    inp[1] = m[input[1]]
    inp[2] = m[input[2]]
    inp[3] = m[input[3]]
    inp[4] = m[input[4]]
    inp[5] = m[input[5]]
    inp[6] = m[input[6]]
    inp[7] = m[input[7]]
    inp[8] = m[input[8]]
    inp[9] = m[input[9]]
    inp[10] = m[input[10]]
    inp[11] = m[input[11]]
    inp[12] = m[input[12]]
    inp[13] = m[input[13]]
    inp[14] = m[input[14]]

    s.add(NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[0] == out[0], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[1] == out[1], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[2] == out[2], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[3] == out[3], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[4] == out[4], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[5] == out[5], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[6] == out[6], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[7] == out[7], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[8] == out[8], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[9] == out[9], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[10] == out[10], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[11] == out[11], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[12] == out[12], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[13] == out[13], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[14] == out[14], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[15] == out[15], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[16] == out[16], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[17] == out[17], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[18] == out[18], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[19] == out[19], NN(inp, l1n1v1, l1n2v1, l1n3v1, l1n4v1, l1n5v1, l1n6v1, l1n7v1, l1n8v1, l1n9v1, l1n10v1, l2n1v1, l2n2v1, l2n3v1, l2n4v1, l2n5v1, l2n6v1, l2n7v1, l2n8v1, l2n9v1, l2n10v1, l3n1v1, l3n2v1, l3n3v1, l3n4v1, l3n5v1, l3n6v1, l3n7v1, l3n8v1, l3n9v1, l3n10v1, l4n1v1, l4n2v1, l4n3v1, l4n4v1, l4n5v1, l4n6v1, l4n7v1, l4n8v1, l4n9v1, l4n10v1)[20] == out[20])
    s.add(NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[0] == out[0], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[1] == out[1], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[2] == out[2], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[3] == out[3], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[4] == out[4], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[5] == out[5], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[6] == out[6], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[7] == out[7], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[8] == out[8], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[9] == out[9], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[10] == out[10], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[11] == out[11], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[12] == out[12], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[13] == out[13], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[14] == out[14], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[15] == out[15], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[16] == out[16], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[17] == out[17], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[18] == out[18], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[19] == out[19], NN(inp, l1n1v2, l1n2v2, l1n3v2, l1n4v2, l1n5v2, l1n6v2, l1n7v2, l1n8v2, l1n9v2, l1n10v2, l2n1v2, l2n2v2, l2n3v2, l2n4v2, l2n5v2, l2n6v2, l2n7v2, l2n8v2, l2n9v2, l2n10v2, l3n1v2, l3n2v2, l3n3v2, l3n4v2, l3n5v2, l3n6v2, l3n7v2, l3n8v2, l3n9v2, l3n10v2, l4n1v2, l4n2v2, l4n3v2, l4n4v2, l4n5v2, l4n6v2, l4n7v2, l4n8v2, l4n9v2, l4n10v2)[20] == out[20])

print(s.check(outv1[0] == outv2[0], outv1[1] == outv2[1], outv1[2] == outv2[2], outv1[3] == outv2[3], outv1[4] == outv2[4], outv1[5] == outv2[5], outv1[6] == outv2[6], outv1[7] == outv2[7], outv1[8] == outv2[8], outv1[9] == outv2[9], outv1[10] == outv2[10], outv1[11] == outv2[11], outv1[12] == outv2[12], outv1[13] == outv2[13], outv1[14] == outv2[14], outv1[15] == outv2[15], outv1[16] == outv2[16], outv1[17] == outv2[17], outv1[18] == outv2[18], outv1[19] == outv2[19], outv1[20] == outv2[20], outv1[21] == outv2[21], outv1[22] == outv2[22], outv1[23] == outv2[23], outv1[24] == outv2[24], outv1[25] == outv2[25], outv1[26] == outv2[26], outv1[27] == outv2[27], outv1[28] == outv2[28], outv1[29] == outv2[29], outv1[30] == outv2[30]))
print(s.model())

print("Finished in " + str(time.time() - start_time))

# print_model(s.model())
